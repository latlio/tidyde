% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quick_plots.R
\name{counts_boxplot}
\alias{counts_boxplot}
\title{Quickly plot a boxplot of counts}
\usage{
counts_boxplot(
  count_df,
  metadata,
  sample_var,
  facet_var = NULL,
  .y_intercept = 2e+06
)
}
\arguments{
\item{count_df}{cleaned dataframe of counts, rows should be gene IDs,
columns should be samples, cells should only contain counts. Also accepts a
`DGEList` object}

\item{metadata}{cleaned metadata for RNAseq data}

\item{sample_var}{variable of sample ids}

\item{facet_var}{variable to facet plots by}

\item{.y_intercept}{default 2000000, setting to NULL removes horizontal line}
}
\value{
a boxplot of RNAseq counts (ggplot object)
}
\description{
`counts_boxplot()` generates a boxplot of counts given count data.
}
\details{
Like any other ggplot object, you can customize the theme of the plot.
Note that this function generates a fairly generic boxplot, and thus is intended
for quick exploratory purposes (much like the intention behind `qplot()`).
}
\examples{
counts <- readr::read_delim("data/GSE60450_Lactation-GenewiseCounts.txt", delim = "\t")
meta <- readr::read_delim("data/SampleInfo_Corrected.txt", delim = "\t") \%>\%
  mutate(FileName = stringr::str_replace(FileName, "\\\\.", "-"))
mycount <- check_sample_names(counts, c(1,2), meta, FileName) \%>\%
  purrr::pluck("mod_count")
mymeta <- check_sample_names(counts, c(1,2), meta, FileName) \%>\%
  purrr::pluck("meta")

# View total raw counts
counts_boxplot(mycount, mymeta, SampleName)

# View filtered counts and also facet by variable
id <- as.character(counts$EntrezGeneID)
mycount \%>\%
  filter_genes(., id, "edgeR") \%>\%
  counts_boxplot(., mymeta, SampleName, CellType)

# As a EDA step within a pipeline of functions
check_sample_names(counts, c(1,2), meta, FileName) \%>\%
  purrr::pluck("mod_count") \%>\%
  filter_genes(., id, "edgeR") \%T>\%
  {print(counts_boxplot(., check_sample_names(counts, c(1,2), meta, FileName) \%>\%
    purrr::pluck("meta"), SampleName))} \%>\%
  make_voom(., my_design) \%>\%
  model_limma() \%>\%
  make_contrasts(design_matrix = my_design, Statuspregnant, Statusvirgin) \%>\%
  model_bayes()
}
